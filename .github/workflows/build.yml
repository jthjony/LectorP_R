name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Clonar el repositorio
      - name: Checkout repo
        uses: actions/checkout@v3

      # 2️⃣ Configurar Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      # 3️⃣ Instalar dependencias del sistema
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip openjdk-17-jdk python3-pip \
            autoconf automake libtool pkg-config zlib1g-dev libffi-dev libssl-dev \
            libncurses5 libstdc++6 git wget curl
          pip install --upgrade pip
          pip install buildozer cython

      # 4️⃣ Instalar SDK de Android con build-tools y aceptar licencias
      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 33
          build-tools: 33.0.2
          accept-licenses: true

      # 5️⃣ Asegurar instalación de platform-tools y build-tools
      - name: Install missing SDK components
        run: |
          yes | $HOME/Android/Sdk/cmdline-tools/latest/bin/sdkmanager \
            "platform-tools" "build-tools;33.0.2" "platforms;android-33"

      # 6️⃣ Exportar variables de entorno necesarias para Buildozer
      - name: Set Android environment variables
        run: |
          echo "ANDROID_SDK_ROOT=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "ANDROID_HOME=$HOME/Android/Sdk" >> $GITHUB_ENV
          echo "JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64" >> $GITHUB_ENV
          echo "PATH=$HOME/Android/Sdk/platform-tools:$HOME/Android/Sdk/build-tools/33.0.2:$PATH" >> $GITHUB_ENV

      # 7️⃣ Compilar APK con Buildozer
      - name: Build APK
        run: |
          buildozer android debug

      # 8️⃣ Subir APK como artifact
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: mi_app.apk
          path: bin/*.apk
