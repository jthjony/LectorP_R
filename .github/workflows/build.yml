name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip unzip openjdk-17-jdk python3-pip
          pip install --upgrade pip
          pip install buildozer cython

      # ðŸ‘‡ Instalar Android SDK y Build Tools
      - name: Install Android SDK
        run: |
          mkdir -p $HOME/android-sdk
          export ANDROID_SDK_ROOT=$HOME/android-sdk
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O cmdline-tools.zip
          unzip cmdline-tools.zip -d $HOME/android-sdk
          mv $HOME/android-sdk/cmdline-tools $HOME/android-sdk/cmdline-tools-temp
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mv $HOME/android-sdk/cmdline-tools-temp/* $HOME/android-sdk/cmdline-tools/latest

          export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
          
          yes | sdkmanager --licenses
          sdkmanager "platform-tools" "platforms;android-33" "build-tools;36.1.0"

      # ðŸ‘‡ Asegurar variables de entorno para Buildozer
      - name: Set Android environment variables
        run: |
          echo "export ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "export PATH=\$ANDROID_SDK_ROOT/platform-tools:\$ANDROID_SDK_ROOT/build-tools/36.1.0:\$PATH" >> $GITHUB_ENV

      - name: Build APK
        run: |
          buildozer android debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: mi_app.apk
          path: bin/*.apk
